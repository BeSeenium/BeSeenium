.TH "beseenium.view.outputHandlers.formatters.BasicFormatter" 3 "Fri Sep 25 2015" "Version 1.0.0-Alpha" "BeSeenium" \" -*- nroff -*-
.ad l
.nh
.SH NAME
beseenium.view.outputHandlers.formatters.BasicFormatter \- Copyright(C) 2015 Jan P\&.C\&.  

.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBbeseenium\&.view\&.outputHandlers\&.formatters\&.AbstractOutputFormatter\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBBasicFormatter\fP ()"
.br
.RI "\fIdefault constructor \fP"
.ti -1c
.RI "String \fBasKeyVal\fP (String key, String val, String delimiter)"
.br
.RI "\fIformat the given string as a key value pair specific to the derived type\&. \fP"
.ti -1c
.RI "String \fBasKVset\fP (String label, String stringToFormat, String delimiter)"
.br
.RI "\fIformat the given string as a key value set specific to the derived type\&. \fP"
.ti -1c
.RI "String \fBasKVsuperSet\fP (String label, String stringToFormat, String delimiter)"
.br
.RI "\fIformat the given string as a key value super set specific to the derived type\&. \fP"
.ti -1c
.RI "String \fBfinalForm\fP (String label, String stringToFormat, String delimiter)"
.br
.RI "\fIdo some final formatting on the given string to put it in the final form specific to the derived type\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 
Copyright(C) 2015 Jan P\&.C\&. 

Hanson & BeSeen Marketing Ltd
.PP
This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version\&.
.PP
This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\&. See the GNU General Public License for more details\&.
.PP
You should have received a copy of the GNU General Public License along with this program\&. If not, see http://www.gnu.org/licenses/\&. This class is responsible for doing the basic output formatting for the results of a test\&. The purpose of this being that other output formatters can then transform the output from this class into the format the user has requested\&. 
.PP
\fBAuthor:\fP
.RS 4
Jan P\&.C\&. Hanson
.RE
.PP
\fBTodo\fP
.RS 4
implement \fBBasicFormatter\fP properly 
.RE
.PP

.PP
Definition at line 26 of file BasicFormatter\&.java\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "beseenium\&.view\&.outputHandlers\&.formatters\&.BasicFormatter\&.BasicFormatter ()"

.PP
default constructor 
.PP
Definition at line 31 of file BasicFormatter\&.java\&.
.SH "Member Function Documentation"
.PP 
.SS "String beseenium\&.view\&.outputHandlers\&.formatters\&.BasicFormatter\&.asKeyVal (String key, String val, String delimiter)"

.PP
format the given string as a key value pair specific to the derived type\&. 
.PP
\fBParameters:\fP
.RS 4
\fIkey\fP the key 
.br
\fIval\fP the value 
.br
\fIdelimiter\fP a string to use as a delimiter 
.RE
.PP
\fBReturns:\fP
.RS 4
String formatted as requested 
.RE
.PP

.PP
Implements \fBbeseenium\&.view\&.outputHandlers\&.formatters\&.AbstractOutputFormatter\fP\&.
.PP
Definition at line 38 of file BasicFormatter\&.java\&.
.SS "String beseenium\&.view\&.outputHandlers\&.formatters\&.BasicFormatter\&.asKVset (String label, String stringToFormat, String delimiter)"

.PP
format the given string as a key value set specific to the derived type\&. 
.PP
\fBParameters:\fP
.RS 4
\fIstringToFormat\fP the string to format 
.br
\fIlabel\fP a string to use as a label in the KVSet (optional) 
.br
\fIdelimiter\fP a string to use as a delimiter 
.RE
.PP
\fBReturns:\fP
.RS 4
String formatted as requested 
.RE
.PP

.PP
Implements \fBbeseenium\&.view\&.outputHandlers\&.formatters\&.AbstractOutputFormatter\fP\&.
.PP
Definition at line 48 of file BasicFormatter\&.java\&.
.SS "String beseenium\&.view\&.outputHandlers\&.formatters\&.BasicFormatter\&.asKVsuperSet (String label, String stringToFormat, String delimiter)"

.PP
format the given string as a key value super set specific to the derived type\&. 
.PP
\fBParameters:\fP
.RS 4
\fIstringToFormat\fP the string to format 
.br
\fIlabel\fP a string to use as a label in the KVsuperSet (optional) 
.br
\fIdelimiter\fP a string to use as a delimiter 
.RE
.PP
\fBReturns:\fP
.RS 4
String formatted as requested 
.RE
.PP

.PP
Implements \fBbeseenium\&.view\&.outputHandlers\&.formatters\&.AbstractOutputFormatter\fP\&.
.PP
Definition at line 58 of file BasicFormatter\&.java\&.
.SS "String beseenium\&.view\&.outputHandlers\&.formatters\&.BasicFormatter\&.finalForm (String label, String stringToFormat, String delimiter)"

.PP
do some final formatting on the given string to put it in the final form specific to the derived type\&. 
.PP
\fBParameters:\fP
.RS 4
\fIstringToFormat\fP the string to format 
.br
\fIlabel\fP a string to use as a label in the final form (optional) 
.br
\fIdelimiter\fP a string to use as a delimiter 
.RE
.PP
\fBReturns:\fP
.RS 4
String formatted as requested 
.RE
.PP

.PP
Implements \fBbeseenium\&.view\&.outputHandlers\&.formatters\&.AbstractOutputFormatter\fP\&.
.PP
Definition at line 68 of file BasicFormatter\&.java\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for BeSeenium from the source code\&.
